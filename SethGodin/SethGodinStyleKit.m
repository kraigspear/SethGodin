//
//  SethGodinStyleKit.m
//  SethGodin
//
//  Created by KraigSpear on 3/5/15.
//  Copyright (c) 2015 Spearware. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "SethGodinStyleKit.h"


@implementation SethGodinStyleKit

#pragma mark Cache

static UIImage* _imageOfGreenBackground = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawStandardButtonWithFrame: (CGRect)frame text: (NSString*)text
{
    //// Color Declarations
    UIColor* yellow = [UIColor colorWithRed: 1 green: 0.811 blue: 0 alpha: 1];
    CGFloat yellowHSBA[4];
    [yellow getHue: &yellowHSBA[0] saturation: &yellowHSBA[1] brightness: &yellowHSBA[2] alpha: &yellowHSBA[3]];

    UIColor* color = [UIColor colorWithHue: 0.1 saturation: yellowHSBA[1] brightness: yellowHSBA[2] alpha: yellowHSBA[3]];
    UIColor* color3 = [color colorWithAlphaComponent: 0.8];

    //// buttonBackground Drawing
    UIBezierPath* buttonBackgroundPath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.00833) + 0.5, CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.04545) + 0.5, floor(CGRectGetWidth(frame) * 0.99167) - floor(CGRectGetWidth(frame) * 0.00833), floor(CGRectGetHeight(frame) * 0.95455) - floor(CGRectGetHeight(frame) * 0.04545)) cornerRadius: 4];
    [color3 setFill];
    [buttonBackgroundPath fill];
    [yellow setStroke];
    buttonBackgroundPath.lineWidth = 1;
    [buttonBackgroundPath stroke];


    //// buttonText Drawing
    CGRect buttonTextRect = CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.01000 + 0.5), CGRectGetMinY(frame) + 13, floor(CGRectGetWidth(frame) * 0.99000 + 0.5) - floor(CGRectGetWidth(frame) * 0.01000 + 0.5), 25);
    NSMutableParagraphStyle* buttonTextStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    buttonTextStyle.alignment = NSTextAlignmentCenter;

    NSDictionary* buttonTextFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"HelveticaNeue-CondensedBlack" size: 20], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: buttonTextStyle};

    [text drawInRect: buttonTextRect withAttributes: buttonTextFontAttributes];
}

+ (void)drawGreenBackground
{
    //// Color Declarations
    UIColor* happyGreen = [UIColor colorWithRed: 0.322 green: 0.69 blue: 0.537 alpha: 1];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 300, 55)];
    [happyGreen setFill];
    [rectanglePath fill];
}

#pragma mark Generated Images

+ (UIImage*)imageOfStandardButtonWithFrame: (CGRect)frame text: (NSString*)text
{
    UIGraphicsBeginImageContextWithOptions(frame.size, NO, 0.0f);
    [SethGodinStyleKit drawStandardButtonWithFrame: frame text: text];

    UIImage* imageOfStandardButton = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfStandardButton;
}

+ (UIImage*)imageOfGreenBackground
{
    if (_imageOfGreenBackground)
        return _imageOfGreenBackground;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 55), NO, 0.0f);
    [SethGodinStyleKit drawGreenBackground];

    _imageOfGreenBackground = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfGreenBackground;
}

#pragma mark Customization Infrastructure

- (void)setGreenBackgroundTargets: (NSArray*)greenBackgroundTargets
{
    _greenBackgroundTargets = greenBackgroundTargets;

    for (id target in self.greenBackgroundTargets)
        [target setImage: SethGodinStyleKit.imageOfGreenBackground];
}


@end
